{
  "openapi": "3.0.1",
  "info": {
    "title": "Tep.Sales.Service API",
    "description": "Tep.Sales.Service API",
    "termsOfService": "https://github.com/",
    "contact": {
      "name": "Administrator",
      "url": "https://github.com/jefersonmlopes",
      "email": "admin@tecnoepec.com.br"
    },
    "license": {
      "name": "Use under MIT License",
      "url": "https://github.com/"
    },
    "version": "v1"
  },
  "paths": {
    "/tepsales/v1/audits": {
      "get": {
        "tags": ["Audit"],
        "summary": "Get All Audit by filter with pagination",
        "parameters": [
          {
            "name": "parentId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            }
          },
          {
            "name": "entity",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "action",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ActionType"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "userCreated",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            }
          },
          {
            "name": "userUpdated",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting atributes, sample: id.desc,name.asc",
            "schema": {
              "type": "string",
              "description": "Sorting atributes, sample: id.desc,name.asc",
              "default": "Id.desc",
              "nullable": true
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "fb4f06e7-c10a-48d1-aa55-277d67efbe21"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllPagedAuditResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tepsales/v1/catalogs/{id}": {
      "delete": {
        "tags": ["Catalog"],
        "summary": "Delete Catalog by Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Catalog id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Catalog id",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "d4e9eb42-1ce0-4666-a192-8423ad8caa89"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones."
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "404": {
            "description": "Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web."
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Catalog"],
        "summary": "Get Catalog by id",
        "operationId": "GetByIdCatalog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Catalog id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Catalog id",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "13526fe7-d007-49c7-bf12-5f3a99a39d5d"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllCatalogResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "404": {
            "description": "Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web."
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Catalog"],
        "summary": "Update part of Catalog",
        "description": "Sample request:\r\n            \r\n    PATCH /tepsales/v1/Catalog/{id}\r\n    [\r\n        {\r\n            \"op\": \"replace\",\r\n            \"path\": \"/atribute_name\",\r\n            \"value\": \"new value\"\r\n        }\r\n    ]",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Catalog id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Catalog id",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "9599e924-4d2b-42cb-ab11-3e2851f21397"
            }
          }
        ],
        "requestBody": {
          "description": "Atributes values",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                },
                "description": "Atributes values"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones."
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "404": {
            "description": "Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web."
          },
          "412": {
            "description": "Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Catalog"],
        "summary": "Update Catalog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Catalog Id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Catalog Id",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "725773a6-36fe-423e-86d5-9d16f77488ab"
            }
          }
        ],
        "requestBody": {
          "description": "Catalog to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutCatalogRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones."
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "404": {
            "description": "Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web."
          },
          "412": {
            "description": "Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tepsales/v1/catalogs/all": {
      "get": {
        "tags": ["Catalog"],
        "summary": "Get All Catalog by filter",
        "parameters": [
          {
            "name": "catalogVersion",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit",
            "schema": {
              "type": "integer",
              "description": "limit",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting atributes, sample: id.desc,name.asc",
            "schema": {
              "type": "string",
              "description": "Sorting atributes, sample: id.desc,name.asc",
              "default": "Id.desc",
              "nullable": true
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "de6d887f-4f0f-4ecc-b0d2-c03cf0462e74"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetAllCatalogResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tepsales/v1/catalogs/paged": {
      "get": {
        "tags": ["Catalog"],
        "summary": "Get All Catalog by filter with pagination",
        "parameters": [
          {
            "name": "catalogVersion",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting atributes, sample: id.desc,name.asc",
            "schema": {
              "type": "string",
              "description": "Sorting atributes, sample: id.desc,name.asc",
              "default": "Id.desc",
              "nullable": true
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "46d8a388-0ba7-48a3-863e-47376bdbdf88"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllPagedCatalogResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tepsales/v1/catalogs": {
      "post": {
        "tags": ["Catalog"],
        "summary": "Create Catalog",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "33692f57-3e1e-405b-a4c4-f781e6a3c2bf"
            }
          }
        ],
        "requestBody": {
          "description": "Catalog to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostCatalogRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created - The request has succeeded and a new resource has been created as a result of it. This is typically the response sent after a POST request, or after some PUT requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCatalogResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "412": {
            "description": "Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tepsales/v1/clients/{id}": {
      "delete": {
        "tags": ["Client"],
        "summary": "Delete Client by Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Client id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client id",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "4effc066-a64a-4913-bba6-008513ca5da8"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones."
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "404": {
            "description": "Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web."
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Client"],
        "summary": "Get Client by id",
        "operationId": "GetByIdClient",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Client id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client id",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "e1800e3b-9388-47fc-ab0c-1c9cf542e7ea"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllClientResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "404": {
            "description": "Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web."
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Client"],
        "summary": "Update part of Client",
        "description": "Sample request:\r\n            \r\n    PATCH /tepsales/v1/Client/{id}\r\n    [\r\n        {\r\n            \"op\": \"replace\",\r\n            \"path\": \"/atribute_name\",\r\n            \"value\": \"new value\"\r\n        }\r\n    ]",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Client id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client id",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "084372a8-b3e7-4f86-9692-fd2df102dfb4"
            }
          }
        ],
        "requestBody": {
          "description": "Atributes values",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                },
                "description": "Atributes values"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones."
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "404": {
            "description": "Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web."
          },
          "412": {
            "description": "Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Client"],
        "summary": "Update Client",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Client Id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Client Id",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "6259c691-8369-4b69-8e7e-211b26d6c4ea"
            }
          }
        ],
        "requestBody": {
          "description": "Client to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutClientRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones."
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "404": {
            "description": "Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web."
          },
          "412": {
            "description": "Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tepsales/v1/clients/all": {
      "get": {
        "tags": ["Client"],
        "summary": "Get All Client by filter",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "document",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "phone",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ie",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit",
            "schema": {
              "type": "integer",
              "description": "limit",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting atributes, sample: id.desc,name.asc",
            "schema": {
              "type": "string",
              "description": "Sorting atributes, sample: id.desc,name.asc",
              "default": "Id.desc",
              "nullable": true
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "33377e0f-2423-4a8c-8df1-ae9fa480d956"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetAllClientResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tepsales/v1/clients/paged": {
      "get": {
        "tags": ["Client"],
        "summary": "Get All Client by filter with pagination",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "document",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "phone",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ie",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting atributes, sample: id.desc,name.asc",
            "schema": {
              "type": "string",
              "description": "Sorting atributes, sample: id.desc,name.asc",
              "default": "Id.desc",
              "nullable": true
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "dedc74b4-5761-4407-bbe9-430c962201a5"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllPagedClientResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tepsales/v1/clients": {
      "post": {
        "tags": ["Client"],
        "summary": "Create Client",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "cad2e504-b349-48de-9f5c-d4f6efecd72a"
            }
          }
        ],
        "requestBody": {
          "description": "Client to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostClientRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created - The request has succeeded and a new resource has been created as a result of it. This is typically the response sent after a POST request, or after some PUT requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostClientResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "412": {
            "description": "Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tepsales/v1/clientProperties/{id}": {
      "delete": {
        "tags": ["ClientProperty"],
        "summary": "Delete ClientProperty by Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ClientProperty id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ClientProperty id",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "941d6994-c9aa-4176-938d-8490bdf91a43"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones."
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "404": {
            "description": "Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web."
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["ClientProperty"],
        "summary": "Get ClientProperty by id",
        "operationId": "GetByIdClientProperty",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ClientProperty id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ClientProperty id",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "42d7e498-6774-4c49-9cdd-74fff601e7c0"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllClientPropertyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "404": {
            "description": "Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web."
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["ClientProperty"],
        "summary": "Update part of ClientProperty",
        "description": "Sample request:\r\n            \r\n    PATCH /tepsales/v1/ClientProperty/{id}\r\n    [\r\n        {\r\n            \"op\": \"replace\",\r\n            \"path\": \"/atribute_name\",\r\n            \"value\": \"new value\"\r\n        }\r\n    ]",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ClientProperty id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ClientProperty id",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "833aff0b-b482-4874-9f3d-8ad689e54c24"
            }
          }
        ],
        "requestBody": {
          "description": "Atributes values",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                },
                "description": "Atributes values"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones."
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "404": {
            "description": "Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web."
          },
          "412": {
            "description": "Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["ClientProperty"],
        "summary": "Update ClientProperty",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ClientProperty Id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ClientProperty Id",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "c6a51fbe-e39e-4707-a6d9-287cfaba6f58"
            }
          }
        ],
        "requestBody": {
          "description": "ClientProperty to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutClientPropertyRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones."
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "404": {
            "description": "Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web."
          },
          "412": {
            "description": "Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tepsales/v1/clientProperties/all": {
      "get": {
        "tags": ["ClientProperty"],
        "summary": "Get All ClientProperty by filter",
        "parameters": [
          {
            "name": "clientId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit",
            "schema": {
              "type": "integer",
              "description": "limit",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting atributes, sample: id.desc,name.asc",
            "schema": {
              "type": "string",
              "description": "Sorting atributes, sample: id.desc,name.asc",
              "default": "Id.asc",
              "nullable": true
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "34acd568-6aa4-4db9-97e4-6a9c900d3f9e"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetAllClientPropertyResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tepsales/v1/clientProperties/paged": {
      "get": {
        "tags": ["ClientProperty"],
        "summary": "Get All ClientProperty by filter with pagination",
        "parameters": [
          {
            "name": "clientId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting atributes, sample: id.desc,name.asc",
            "schema": {
              "type": "string",
              "description": "Sorting atributes, sample: id.desc,name.asc",
              "default": "Id.desc",
              "nullable": true
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "36cbc92a-ccaf-4987-a7ed-fca03be093b4"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllPagedClientPropertyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tepsales/v1/clientProperties": {
      "post": {
        "tags": ["ClientProperty"],
        "summary": "Create ClientProperty",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "0ce43d15-5e6d-4dea-bf72-66e80721eeb4"
            }
          }
        ],
        "requestBody": {
          "description": "ClientProperty to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostClientPropertyRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created - The request has succeeded and a new resource has been created as a result of it. This is typically the response sent after a POST request, or after some PUT requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostClientPropertyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "412": {
            "description": "Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tepsales/v1/companies/{id}": {
      "delete": {
        "tags": ["Company"],
        "summary": "Delete Company by Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Company id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Company id",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "6436549c-01de-45ab-84c4-9ef7bca500fe"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones."
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "404": {
            "description": "Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web."
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Company"],
        "summary": "Get Company by id",
        "operationId": "GetByIdCompany",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Company id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Company id",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "fe650563-a144-4522-9936-0ce2f8dc795b"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllCompanyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "404": {
            "description": "Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web."
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Company"],
        "summary": "Update part of Company",
        "description": "Sample request:\r\n            \r\n    PATCH /tepsales/v1/Company/{id}\r\n    [\r\n        {\r\n            \"op\": \"replace\",\r\n            \"path\": \"/atribute_name\",\r\n            \"value\": \"new value\"\r\n        }\r\n    ]",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Company id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Company id",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "f7300e34-d3b2-48cf-860e-42728c134d00"
            }
          }
        ],
        "requestBody": {
          "description": "Atributes values",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                },
                "description": "Atributes values"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones."
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "404": {
            "description": "Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web."
          },
          "412": {
            "description": "Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Company"],
        "summary": "Update Company",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Company Id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Company Id",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "998fed4c-a60f-4978-a121-c9acfbf4e752"
            }
          }
        ],
        "requestBody": {
          "description": "Company to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutCompanyRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones."
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "404": {
            "description": "Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web."
          },
          "412": {
            "description": "Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tepsales/v1/companies/all": {
      "get": {
        "tags": ["Company"],
        "summary": "Get All Company by filter",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "document",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit",
            "schema": {
              "type": "integer",
              "description": "limit",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting atributes, sample: id.desc,name.asc",
            "schema": {
              "type": "string",
              "description": "Sorting atributes, sample: id.desc,name.asc",
              "default": "Id.desc",
              "nullable": true
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "84ce4e09-9fab-4bbe-8b18-aab24b482db2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetAllCompanyResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tepsales/v1/companies/paged": {
      "get": {
        "tags": ["Company"],
        "summary": "Get All Company by filter with pagination",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "document",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting atributes, sample: id.desc,name.asc",
            "schema": {
              "type": "string",
              "description": "Sorting atributes, sample: id.desc,name.asc",
              "default": "Id.desc",
              "nullable": true
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "7f99b3c1-feea-41f3-b273-832eb515dcda"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllPagedCompanyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tepsales/v1/companies": {
      "post": {
        "tags": ["Company"],
        "summary": "Create Company",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "cb308f79-60f4-4494-8d80-94c394f33a8b"
            }
          }
        ],
        "requestBody": {
          "description": "Company to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostCompanyRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created - The request has succeeded and a new resource has been created as a result of it. This is typically the response sent after a POST request, or after some PUT requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCompanyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "412": {
            "description": "Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tepsales/v1/freights/{id}": {
      "delete": {
        "tags": ["Freight"],
        "summary": "Delete Freight by Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Freight id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Freight id",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "2f99fc70-a686-499b-b18c-ac24e1f98391"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones."
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "404": {
            "description": "Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web."
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Freight"],
        "summary": "Get Freight by id",
        "operationId": "GetByIdFreight",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Freight id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Freight id",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "bff02caf-6448-4441-95f3-787a38552b13"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllFreightResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "404": {
            "description": "Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web."
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Freight"],
        "summary": "Update part of Freight",
        "description": "Sample request:\r\n            \r\n    PATCH /tepsales/v1/Freight/{id}\r\n    [\r\n        {\r\n            \"op\": \"replace\",\r\n            \"path\": \"/atribute_name\",\r\n            \"value\": \"new value\"\r\n        }\r\n    ]",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Freight id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Freight id",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "807840d0-f172-4436-9c83-bbbee75d67c3"
            }
          }
        ],
        "requestBody": {
          "description": "Atributes values",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                },
                "description": "Atributes values"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones."
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "404": {
            "description": "Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web."
          },
          "412": {
            "description": "Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Freight"],
        "summary": "Update Freight",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Freight Id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Freight Id",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "011f8ecd-b2d9-4f59-bd77-269b87e75b6d"
            }
          }
        ],
        "requestBody": {
          "description": "Freight to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutFreightRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones."
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "404": {
            "description": "Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web."
          },
          "412": {
            "description": "Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tepsales/v1/freights/all": {
      "get": {
        "tags": ["Freight"],
        "summary": "Get All Freight by filter",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "freightVersion",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "distance",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "weightClass",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit",
            "schema": {
              "type": "integer",
              "description": "limit",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting atributes, sample: id.desc,name.asc",
            "schema": {
              "type": "string",
              "description": "Sorting atributes, sample: id.desc,name.asc",
              "default": "Id.desc",
              "nullable": true
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "c94b6175-73e4-4545-87a8-d4967a0dbdd8"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetAllFreightResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tepsales/v1/freights/paged": {
      "get": {
        "tags": ["Freight"],
        "summary": "Get All Freight by filter with pagination",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "freightVersion",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "distance",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "weightClass",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting atributes, sample: id.desc,name.asc",
            "schema": {
              "type": "string",
              "description": "Sorting atributes, sample: id.desc,name.asc",
              "default": "Id.desc",
              "nullable": true
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "7ad6427e-ad43-423b-b057-cbc05801971e"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllPagedFreightResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tepsales/v1/freights": {
      "post": {
        "tags": ["Freight"],
        "summary": "Create Freight",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "ff009520-c85e-4f64-9d81-57040156f763"
            }
          }
        ],
        "requestBody": {
          "description": "Freight to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostFreightRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created - The request has succeeded and a new resource has been created as a result of it. This is typically the response sent after a POST request, or after some PUT requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostFreightResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "412": {
            "description": "Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tepsales/v1/products/{id}": {
      "delete": {
        "tags": ["Product"],
        "summary": "Delete Product by Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Product id",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "555a0f10-66ec-462e-987c-54153dd7f481"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones."
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "404": {
            "description": "Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web."
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Product"],
        "summary": "Get Product by id",
        "operationId": "GetByIdProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Product id",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "b19821d7-485c-4a7b-bdc2-e33c85a991e4"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "404": {
            "description": "Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web."
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Product"],
        "summary": "Update part of Product",
        "description": "Sample request:\r\n            \r\n    PATCH /tepsales/v1/Product/{id}\r\n    [\r\n        {\r\n            \"op\": \"replace\",\r\n            \"path\": \"/atribute_name\",\r\n            \"value\": \"new value\"\r\n        }\r\n    ]",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Product id",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "42812a3d-9366-4d28-a4c2-dee4e13fbcc1"
            }
          }
        ],
        "requestBody": {
          "description": "Atributes values",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                },
                "description": "Atributes values"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones."
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "404": {
            "description": "Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web."
          },
          "412": {
            "description": "Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Product"],
        "summary": "Update Product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product Id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Product Id",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "f1b7511c-068a-44b1-89da-00ae41285c83"
            }
          }
        ],
        "requestBody": {
          "description": "Product to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutProductRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones."
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "404": {
            "description": "Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web."
          },
          "412": {
            "description": "Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tepsales/v1/products/all/catalogVersion/{catalogVersion}": {
      "get": {
        "tags": ["Product"],
        "summary": "Get All Product by filter",
        "parameters": [
          {
            "name": "catalogVersion",
            "in": "path",
            "description": "catalogVersion",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "catalogVersion",
              "format": "int32"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "795c4bd4-52df-4b45-a582-6ae3c68cd3b3"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllLastCatalogVersionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tepsales/v1/products/paged": {
      "get": {
        "tags": ["Product"],
        "summary": "Get All Product by filter with pagination",
        "parameters": [
          {
            "name": "family",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ProductFamilyEnum"
            }
          },
          {
            "name": "code",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "catalogId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting atributes, sample: id.desc,name.asc",
            "schema": {
              "type": "string",
              "description": "Sorting atributes, sample: id.desc,name.asc",
              "default": "Id.desc",
              "nullable": true
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "44a179af-1d3e-4825-af4a-6e150781b69b"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllPagedProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tepsales/v1/products/all": {
      "get": {
        "tags": ["Product"],
        "summary": "Get All Product by filter",
        "parameters": [
          {
            "name": "family",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ProductFamilyEnum"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "catalogId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit",
            "schema": {
              "type": "integer",
              "description": "limit",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting atributes, sample: id.desc,name.asc",
            "schema": {
              "type": "string",
              "description": "Sorting atributes, sample: id.desc,name.asc",
              "default": "Id.desc",
              "nullable": true
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "91756e7f-8d83-4f43-9f63-9156264091b7"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetAllProductResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tepsales/v1/products": {
      "post": {
        "tags": ["Product"],
        "summary": "Create Product",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "40ded20d-e4cb-4fd9-8430-71e32d12d512"
            }
          }
        ],
        "requestBody": {
          "description": "Product to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostProductRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created - The request has succeeded and a new resource has been created as a result of it. This is typically the response sent after a POST request, or after some PUT requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "412": {
            "description": "Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tepsales/v1/reasonscancels/{id}": {
      "delete": {
        "tags": ["ReasonCancel"],
        "summary": "Delete ReasonCancel by Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ReasonCancel id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ReasonCancel id",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "8695360a-921b-4855-90d9-94f1d39a9bbf"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones."
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "404": {
            "description": "Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web."
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["ReasonCancel"],
        "summary": "Get ReasonCancel by id",
        "operationId": "GetByIdReasonCancel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ReasonCancel id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ReasonCancel id",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "00c3f924-b6a2-4b73-babf-631fed299b31"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllReasonCancelResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "404": {
            "description": "Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web."
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["ReasonCancel"],
        "summary": "Update part of ReasonCancel",
        "description": "Sample request:\r\n            \r\n    PATCH /tepsales/v1/ReasonCancel/{id}\r\n    [\r\n        {\r\n            \"op\": \"replace\",\r\n            \"path\": \"/atribute_name\",\r\n            \"value\": \"new value\"\r\n        }\r\n    ]",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ReasonCancel id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ReasonCancel id",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "e681d60f-1dd5-42bd-9c14-6c4048594c70"
            }
          }
        ],
        "requestBody": {
          "description": "Atributes values",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                },
                "description": "Atributes values"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones."
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "404": {
            "description": "Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web."
          },
          "412": {
            "description": "Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["ReasonCancel"],
        "summary": "Update ReasonCancel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ReasonCancel Id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ReasonCancel Id",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "c1acd26d-f10b-4c7c-abeb-401714fa8d92"
            }
          }
        ],
        "requestBody": {
          "description": "ReasonCancel to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutReasonCancelRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones."
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "404": {
            "description": "Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web."
          },
          "412": {
            "description": "Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tepsales/v1/reasonscancels/paged": {
      "get": {
        "tags": ["ReasonCancel"],
        "summary": "Get All ReasonCancel by filter with pagination",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting atributes, sample: id.desc,name.asc",
            "schema": {
              "type": "string",
              "description": "Sorting atributes, sample: id.desc,name.asc",
              "default": "Id.desc",
              "nullable": true
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "c61eb496-31e4-476c-a5fb-86b0d75cd60e"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllPagedReasonCancelResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tepsales/v1/reasonscancels/all": {
      "get": {
        "tags": ["ReasonCancel"],
        "summary": "Get All ReasonCancel by filter",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit",
            "schema": {
              "type": "integer",
              "description": "limit",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting atributes, sample: id.desc,name.asc",
            "schema": {
              "type": "string",
              "description": "Sorting atributes, sample: id.desc,name.asc",
              "default": "Id.desc",
              "nullable": true
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "3093b319-3ac4-49a1-badb-46e6854a79c4"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetAllReasonCancelResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tepsales/v1/reasonscancels": {
      "post": {
        "tags": ["ReasonCancel"],
        "summary": "Create ReasonCancel",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "42491d78-4ccd-4ead-903b-38ec0c376c64"
            }
          }
        ],
        "requestBody": {
          "description": "ReasonCancel to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostReasonCancelRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created - The request has succeeded and a new resource has been created as a result of it. This is typically the response sent after a POST request, or after some PUT requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostReasonCancelResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "412": {
            "description": "Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tepsales/v1/templates/{id}": {
      "delete": {
        "tags": ["Template"],
        "summary": "Delete Template by Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Template id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Template id",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "860f2efc-5998-4b2c-af10-caed773b3030"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones."
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "404": {
            "description": "Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web."
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Template"],
        "summary": "Get Template by id",
        "operationId": "GetByIdTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Template id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Template id",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "63b8ba0d-43be-468a-bf19-96f8c76c3ea5"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllTemplateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "404": {
            "description": "Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web."
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Template"],
        "summary": "Update part of Template",
        "description": "Sample request:\r\n            \r\n    PATCH /tepsales/v1/Template/{id}\r\n    [\r\n        {\r\n            \"op\": \"replace\",\r\n            \"path\": \"/atribute_name\",\r\n            \"value\": \"new value\"\r\n        }\r\n    ]",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Template id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Template id",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "ee38dd2f-510b-4663-a38a-774297fc9b92"
            }
          }
        ],
        "requestBody": {
          "description": "Atributes values",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                },
                "description": "Atributes values"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones."
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "404": {
            "description": "Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web."
          },
          "412": {
            "description": "Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Template"],
        "summary": "Update Template",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Template Id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Template Id",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "d3f39722-8886-4fa4-bd11-9666df491acc"
            }
          }
        ],
        "requestBody": {
          "description": "Template to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutTemplateRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones."
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "404": {
            "description": "Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web."
          },
          "412": {
            "description": "Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tepsales/v1/templates/paged": {
      "get": {
        "tags": ["Template"],
        "summary": "Get All Template by filter with pagination",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting atributes, sample: id.desc,name.asc",
            "schema": {
              "type": "string",
              "description": "Sorting atributes, sample: id.desc,name.asc",
              "default": "Id.desc",
              "nullable": true
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "85210938-634c-4634-b1a3-96bf3773e0d4"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllPagedTemplateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tepsales/v1/templates/all": {
      "get": {
        "tags": ["Template"],
        "summary": "Get All Template by filter",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit",
            "schema": {
              "type": "integer",
              "description": "limit",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting atributes, sample: id.desc,name.asc",
            "schema": {
              "type": "string",
              "description": "Sorting atributes, sample: id.desc,name.asc",
              "default": "Id.desc",
              "nullable": true
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "649408fa-b0fe-4dd2-8819-9428b95409de"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetAllTemplateResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tepsales/v1/templates": {
      "post": {
        "tags": ["Template"],
        "summary": "Create Template",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "bebe79f1-5406-4af0-a108-e526465f1304"
            }
          }
        ],
        "requestBody": {
          "description": "Template to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostTemplateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created - The request has succeeded and a new resource has been created as a result of it. This is typically the response sent after a POST request, or after some PUT requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostTemplateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "412": {
            "description": "Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tepsales/v1/users/{id}": {
      "delete": {
        "tags": ["User"],
        "summary": "Delete User by Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "User id",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "e32c244e-988e-4fa4-8f48-4714c92377a0"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones."
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "404": {
            "description": "Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web."
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["User"],
        "summary": "Get User by id",
        "operationId": "GetByIdUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "User id",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "8f4dbf53-9ee4-4e91-825e-a94e9e191310"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "404": {
            "description": "Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web."
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["User"],
        "summary": "Update part of User",
        "description": "Sample request:\r\n            \r\n    PATCH /tepsales/v1/User/{id}\r\n    [\r\n        {\r\n            \"op\": \"replace\",\r\n            \"path\": \"/atribute_name\",\r\n            \"value\": \"new value\"\r\n        }\r\n    ]",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "User id",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "6527ced4-949e-477d-bdcf-4b9fd2132188"
            }
          }
        ],
        "requestBody": {
          "description": "Atributes values",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                },
                "description": "Atributes values"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones."
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "404": {
            "description": "Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web."
          },
          "412": {
            "description": "Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["User"],
        "summary": "Update User",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User Id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "User Id",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "8e07951d-9d49-48be-8de6-c3a48c11b790"
            }
          }
        ],
        "requestBody": {
          "description": "User to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutUserRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones."
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "404": {
            "description": "Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web."
          },
          "412": {
            "description": "Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tepsales/v1/users/paged": {
      "get": {
        "tags": ["User"],
        "summary": "Get All User by filter with pagination",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "documentId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "phone",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting atributes, sample: id.desc,name.asc",
            "schema": {
              "type": "string",
              "description": "Sorting atributes, sample: id.desc,name.asc",
              "nullable": true
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "99b6d19a-7928-4c0b-b394-9f22fe3d1989"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllPagedUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tepsales/v1/users/all": {
      "get": {
        "tags": ["User"],
        "summary": "Get All User by filter",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "documentId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "phone",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit",
            "schema": {
              "type": "integer",
              "description": "limit",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting atributes, sample: id.desc,name.asc",
            "schema": {
              "type": "string",
              "description": "Sorting atributes, sample: id.desc,name.asc",
              "nullable": true
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "7d607f83-2d34-4cfc-8638-de28c2c5e33a"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetAllUserResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tepsales/v1/users": {
      "post": {
        "tags": ["User"],
        "summary": "Create User",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "20cd3290-f8d6-4657-88bf-f1a3c225bb0b"
            }
          }
        ],
        "requestBody": {
          "description": "User to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostUserRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created - The request has succeeded and a new resource has been created as a result of it. This is typically the response sent after a POST request, or after some PUT requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "412": {
            "description": "Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tepsales/v1/users/singin": {
      "post": {
        "tags": ["User"],
        "summary": "Create User",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "11836a70-fb0c-4459-b3fe-e44f9c6842ff"
            }
          }
        ],
        "requestBody": {
          "description": "User to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostUserSinginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok - The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "412": {
            "description": "Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tepsales/v1/users/singup": {
      "post": {
        "tags": ["User"],
        "summary": "Create User",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "6e8c14f4-2395-4d5e-9ecc-5eac69dd9348"
            }
          }
        ],
        "requestBody": {
          "description": "User to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok - The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "412": {
            "description": "Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tepsales/v1/vehicles/{id}": {
      "delete": {
        "tags": ["Vehicle"],
        "summary": "Delete Vehicle by Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Vehicle id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Vehicle id",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "bf78b2ed-5b55-470d-83e6-439ad08441d6"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones."
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "404": {
            "description": "Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web."
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Vehicle"],
        "summary": "Get Vehicle by id",
        "operationId": "GetByIdVehicle",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Vehicle id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Vehicle id",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "c90e2871-2956-4a4d-b7b0-3fc6d0031bfe"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllVehicleResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "404": {
            "description": "Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web."
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Vehicle"],
        "summary": "Update part of Vehicle",
        "description": "Sample request:\r\n            \r\n    PATCH /tepsales/v1/Vehicle/{id}\r\n    [\r\n        {\r\n            \"op\": \"replace\",\r\n            \"path\": \"/atribute_name\",\r\n            \"value\": \"new value\"\r\n        }\r\n    ]",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Vehicle id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Vehicle id",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "40db2745-8ca0-4663-aaad-5b65df8acd8e"
            }
          }
        ],
        "requestBody": {
          "description": "Atributes values",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                },
                "description": "Atributes values"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones."
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "404": {
            "description": "Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web."
          },
          "412": {
            "description": "Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Vehicle"],
        "summary": "Update Vehicle",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Vehicle Id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Vehicle Id",
              "format": "uuid"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "95df604f-da7c-4cb0-a8ea-072e3c2a844a"
            }
          }
        ],
        "requestBody": {
          "description": "Vehicle to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutVehicleRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones."
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "404": {
            "description": "Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web."
          },
          "412": {
            "description": "Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tepsales/v1/vehicles/paged": {
      "get": {
        "tags": ["Vehicle"],
        "summary": "Get All Vehicle by filter with pagination",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "capacity",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "minCapacity",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting atributes, sample: id.desc,name.asc",
            "schema": {
              "type": "string",
              "description": "Sorting atributes, sample: id.desc,name.asc",
              "default": "Id.desc",
              "nullable": true
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "06a266ef-40be-4a91-a9d5-51c3e1934cdb"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllPagedVehicleResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tepsales/v1/vehicles/all": {
      "get": {
        "tags": ["Vehicle"],
        "summary": "Get All Vehicle by filter",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "capacity",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "minCapacity",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit",
            "schema": {
              "type": "integer",
              "description": "limit",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting atributes, sample: id.desc,name.asc",
            "schema": {
              "type": "string",
              "description": "Sorting atributes, sample: id.desc,name.asc",
              "default": "Id.desc",
              "nullable": true
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "c341ce38-79ba-44da-935c-58bfe32f463d"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetAllVehicleResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tepsales/v1/vehicles": {
      "post": {
        "tags": ["Vehicle"],
        "summary": "Create Vehicle",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "49326894-5546-42bf-a3da-0c8259bd3f02"
            }
          }
        ],
        "requestBody": {
          "description": "Vehicle to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostVehicleRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created - The request has succeeded and a new resource has been created as a result of it. This is typically the response sent after a POST request, or after some PUT requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostVehicleResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "412": {
            "description": "Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/tepsales/v1/version": {
      "get": {
        "tags": ["Version"],
        "summary": "Get Version",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Your Api Key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-csrf-token",
            "in": "header",
            "description": "CSRF Protection",
            "schema": {
              "type": "string",
              "default": "e4796f97-48b9-4e4a-aae5-a8c6bbf7cbc1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - The request has succeeded."
          },
          "400": {
            "description": "Bad Request – This means that client-side input fails validation."
          },
          "401": {
            "description": "Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated."
          },
          "403": {
            "description": "Forbidden – This means the user is authenticated, but it’s not allowed to access a resource."
          },
          "404": {
            "description": "Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web."
          },
          "500": {
            "description": "Intertal Server Error - The server has encountered a situation it doesn't know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ActionType": {
        "enum": [1, 2, 3],
        "type": "integer",
        "format": "int32"
      },
      "GetAllAuditResponse": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userCreated": {
            "type": "string",
            "nullable": true
          },
          "userUpdated": {
            "type": "string",
            "nullable": true
          },
          "parentId": {
            "type": "string",
            "format": "uuid"
          },
          "entity": {
            "type": "string",
            "nullable": true
          },
          "action": {
            "$ref": "#/components/schemas/ActionType"
          },
          "data": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GetAllPagedAuditResponse": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "rowCount": {
            "type": "integer",
            "format": "int32"
          },
          "firstRowOnPage": {
            "type": "integer",
            "format": "int32"
          },
          "lastRowOnPage": {
            "type": "integer",
            "format": "int32"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetAllAuditResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ErrorDetails": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "errorCode": {
            "type": "string",
            "nullable": true
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetAllCatalogResponse": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userCreated": {
            "type": "string",
            "nullable": true
          },
          "userUpdated": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "catalogVersion": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "OperationType": {
        "enum": [0, 1, 2, 3, 4, 5, 6],
        "type": "integer",
        "format": "int32"
      },
      "Operation": {
        "type": "object",
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PutCatalogRequest": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userCreated": {
            "type": "string",
            "nullable": true
          },
          "userUpdated": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "catalogVersion": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetAllPagedCatalogResponse": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "rowCount": {
            "type": "integer",
            "format": "int32"
          },
          "firstRowOnPage": {
            "type": "integer",
            "format": "int32"
          },
          "lastRowOnPage": {
            "type": "integer",
            "format": "int32"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetAllCatalogResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PostCatalogRequest": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userCreated": {
            "type": "string",
            "nullable": true
          },
          "userUpdated": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "catalogVersion": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PostCatalogResponse": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userCreated": {
            "type": "string",
            "nullable": true
          },
          "userUpdated": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "catalogVersion": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetAllClientResponse": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userCreated": {
            "type": "string",
            "nullable": true
          },
          "userUpdated": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "document": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "ie": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PutClientRequest": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userCreated": {
            "type": "string",
            "nullable": true
          },
          "userUpdated": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "document": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "ie": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetAllPagedClientResponse": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "rowCount": {
            "type": "integer",
            "format": "int32"
          },
          "firstRowOnPage": {
            "type": "integer",
            "format": "int32"
          },
          "lastRowOnPage": {
            "type": "integer",
            "format": "int32"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetAllClientResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PostClientRequest": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userCreated": {
            "type": "string",
            "nullable": true
          },
          "userUpdated": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "document": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "ie": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PostClientResponse": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userCreated": {
            "type": "string",
            "nullable": true
          },
          "userUpdated": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "document": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "ie": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetAllClientPropertyResponse": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userCreated": {
            "type": "string",
            "nullable": true
          },
          "userUpdated": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "cep": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "neighborhood": {
            "type": "string",
            "nullable": true
          },
          "number": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "complement": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "type": "string",
            "nullable": true
          },
          "distance": {
            "type": "number",
            "format": "double"
          },
          "clientId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "PutClientPropertyRequest": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userCreated": {
            "type": "string",
            "nullable": true
          },
          "userUpdated": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "cep": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "neighborhood": {
            "type": "string",
            "nullable": true
          },
          "number": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "complement": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "type": "string",
            "nullable": true
          },
          "distance": {
            "type": "number",
            "format": "double"
          },
          "clientId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GetAllPagedClientPropertyResponse": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "rowCount": {
            "type": "integer",
            "format": "int32"
          },
          "firstRowOnPage": {
            "type": "integer",
            "format": "int32"
          },
          "lastRowOnPage": {
            "type": "integer",
            "format": "int32"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetAllClientPropertyResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PostClientPropertyRequest": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userCreated": {
            "type": "string",
            "nullable": true
          },
          "userUpdated": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "cep": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "neighborhood": {
            "type": "string",
            "nullable": true
          },
          "number": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "complement": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "type": "string",
            "nullable": true
          },
          "distance": {
            "type": "number",
            "format": "double"
          },
          "clientId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "PostClientPropertyResponse": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userCreated": {
            "type": "string",
            "nullable": true
          },
          "userUpdated": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "cep": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "neighborhood": {
            "type": "string",
            "nullable": true
          },
          "number": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "complement": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "type": "string",
            "nullable": true
          },
          "distance": {
            "type": "number",
            "format": "double"
          },
          "clientId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GetAllCompanyResponse": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userCreated": {
            "type": "string",
            "nullable": true
          },
          "userUpdated": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "document": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PutCompanyRequest": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userCreated": {
            "type": "string",
            "nullable": true
          },
          "userUpdated": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "document": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetAllPagedCompanyResponse": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "rowCount": {
            "type": "integer",
            "format": "int32"
          },
          "firstRowOnPage": {
            "type": "integer",
            "format": "int32"
          },
          "lastRowOnPage": {
            "type": "integer",
            "format": "int32"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetAllCompanyResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PostCompanyRequest": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userCreated": {
            "type": "string",
            "nullable": true
          },
          "userUpdated": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "document": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PostCompanyResponse": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userCreated": {
            "type": "string",
            "nullable": true
          },
          "userUpdated": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "document": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetAllFreightResponse": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userCreated": {
            "type": "string",
            "nullable": true
          },
          "userUpdated": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "freightVersion": {
            "type": "integer",
            "format": "int32"
          },
          "distance": {
            "type": "integer",
            "format": "int32"
          },
          "untilSevenDays": {
            "type": "number",
            "format": "double"
          },
          "fourteenDays": {
            "type": "number",
            "format": "double"
          },
          "twentyEightDays": {
            "type": "number",
            "format": "double"
          },
          "fortyTwoDays": {
            "type": "number",
            "format": "double"
          },
          "fiftySixDays": {
            "type": "number",
            "format": "double"
          },
          "eightyFourDays": {
            "type": "number",
            "format": "double"
          },
          "oneHundredTwelveDays": {
            "type": "number",
            "format": "double"
          },
          "weightClass": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PutFreightRequest": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userCreated": {
            "type": "string",
            "nullable": true
          },
          "userUpdated": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "freightVersion": {
            "type": "integer",
            "format": "int32"
          },
          "distance": {
            "type": "integer",
            "format": "int32"
          },
          "untilSevenDays": {
            "type": "number",
            "format": "double"
          },
          "fourteenDays": {
            "type": "number",
            "format": "double"
          },
          "twentyEightDays": {
            "type": "number",
            "format": "double"
          },
          "fortyTwoDays": {
            "type": "number",
            "format": "double"
          },
          "fiftySixDays": {
            "type": "number",
            "format": "double"
          },
          "eightyFourDays": {
            "type": "number",
            "format": "double"
          },
          "oneHundredTwelveDays": {
            "type": "number",
            "format": "double"
          },
          "weightClass": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetAllPagedFreightResponse": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "rowCount": {
            "type": "integer",
            "format": "int32"
          },
          "firstRowOnPage": {
            "type": "integer",
            "format": "int32"
          },
          "lastRowOnPage": {
            "type": "integer",
            "format": "int32"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetAllFreightResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PostFreightRequest": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userCreated": {
            "type": "string",
            "nullable": true
          },
          "userUpdated": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "freightVersion": {
            "type": "integer",
            "format": "int32"
          },
          "distance": {
            "type": "integer",
            "format": "int32"
          },
          "untilSevenDays": {
            "type": "number",
            "format": "double"
          },
          "fourteenDays": {
            "type": "number",
            "format": "double"
          },
          "twentyEightDays": {
            "type": "number",
            "format": "double"
          },
          "fortyTwoDays": {
            "type": "number",
            "format": "double"
          },
          "fiftySixDays": {
            "type": "number",
            "format": "double"
          },
          "eightyFourDays": {
            "type": "number",
            "format": "double"
          },
          "oneHundredTwelveDays": {
            "type": "number",
            "format": "double"
          },
          "weightClass": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PostFreightResponse": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userCreated": {
            "type": "string",
            "nullable": true
          },
          "userUpdated": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "freightVersion": {
            "type": "integer",
            "format": "int32"
          },
          "distance": {
            "type": "integer",
            "format": "int32"
          },
          "untilSevenDays": {
            "type": "number",
            "format": "double"
          },
          "fourteenDays": {
            "type": "number",
            "format": "double"
          },
          "twentyEightDays": {
            "type": "number",
            "format": "double"
          },
          "fortyTwoDays": {
            "type": "number",
            "format": "double"
          },
          "fiftySixDays": {
            "type": "number",
            "format": "double"
          },
          "eightyFourDays": {
            "type": "number",
            "format": "double"
          },
          "oneHundredTwelveDays": {
            "type": "number",
            "format": "double"
          },
          "weightClass": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ProductPackageEnum": {
        "enum": [1, 2],
        "type": "integer",
        "format": "int32"
      },
      "ProductPackage": {
        "type": "object",
        "properties": {
          "weightkilograms": {
            "type": "number",
            "format": "double"
          },
          "packageType": {
            "$ref": "#/components/schemas/ProductPackageEnum"
          }
        },
        "additionalProperties": false
      },
      "ProductFamilyEnum": {
        "enum": [1, 2, 3, 4, 5, 6],
        "type": "integer",
        "format": "int32"
      },
      "ProductPriceDeadlineEnum": {
        "enum": [1, 2, 3, 4, 5, 6, 7],
        "type": "integer",
        "format": "int32"
      },
      "ProductPrice": {
        "type": "object",
        "properties": {
          "price": {
            "type": "number",
            "format": "double"
          },
          "priceDeadline": {
            "$ref": "#/components/schemas/ProductPriceDeadlineEnum"
          }
        },
        "additionalProperties": false
      },
      "ProductDiscountWeightTypeEnum": {
        "enum": [1, 2],
        "type": "integer",
        "format": "int32"
      },
      "ProductDiscountTypeEnum": {
        "enum": [1, 2],
        "type": "integer",
        "format": "int32"
      },
      "ProductDiscountRule": {
        "type": "object",
        "properties": {
          "discountWeightType": {
            "$ref": "#/components/schemas/ProductDiscountWeightTypeEnum"
          },
          "packageType": {
            "$ref": "#/components/schemas/ProductPackageEnum"
          },
          "minQuantity": {
            "type": "number",
            "format": "double"
          },
          "discountType": {
            "$ref": "#/components/schemas/ProductDiscountTypeEnum"
          },
          "discount": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "GetAllProductResponse": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userCreated": {
            "type": "string",
            "nullable": true
          },
          "userUpdated": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "productPackages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductPackage"
            },
            "nullable": true
          },
          "family": {
            "$ref": "#/components/schemas/ProductFamilyEnum"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductPrice"
            },
            "nullable": true
          },
          "discountRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductDiscountRule"
            },
            "nullable": true
          },
          "discountCommission": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "PutProductRequest": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userCreated": {
            "type": "string",
            "nullable": true
          },
          "userUpdated": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "productPackages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductPackage"
            },
            "nullable": true
          },
          "family": {
            "$ref": "#/components/schemas/ProductFamilyEnum"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductPrice"
            },
            "nullable": true
          },
          "discountRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductDiscountRule"
            },
            "nullable": true
          },
          "discountCommission": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "DocumentVersion": {
        "type": "object",
        "additionalProperties": false
      },
      "Catalog": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userCreated": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "userUpdated": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "version": {
            "$ref": "#/components/schemas/DocumentVersion"
          },
          "companyId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "catalogVersion": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userCreated": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "userUpdated": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "version": {
            "$ref": "#/components/schemas/DocumentVersion"
          },
          "companyId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "productPackages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductPackage"
            },
            "nullable": true
          },
          "family": {
            "$ref": "#/components/schemas/ProductFamilyEnum"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductPrice"
            },
            "nullable": true
          },
          "discountRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductDiscountRule"
            },
            "nullable": true
          },
          "discountCommission": {
            "type": "number",
            "format": "double"
          },
          "catalogId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GetAllLastCatalogVersionResponse": {
        "type": "object",
        "properties": {
          "catalog": {
            "$ref": "#/components/schemas/Catalog"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Product"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetAllPagedProductResponse": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "rowCount": {
            "type": "integer",
            "format": "int32"
          },
          "firstRowOnPage": {
            "type": "integer",
            "format": "int32"
          },
          "lastRowOnPage": {
            "type": "integer",
            "format": "int32"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetAllProductResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PostProductRequest": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userCreated": {
            "type": "string",
            "nullable": true
          },
          "userUpdated": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "productPackages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductPackage"
            },
            "nullable": true
          },
          "family": {
            "$ref": "#/components/schemas/ProductFamilyEnum"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductPrice"
            },
            "nullable": true
          },
          "discountRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductDiscountRule"
            },
            "nullable": true
          },
          "discountCommission": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "PostProductResponse": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userCreated": {
            "type": "string",
            "nullable": true
          },
          "userUpdated": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "productPackages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductPackage"
            },
            "nullable": true
          },
          "family": {
            "$ref": "#/components/schemas/ProductFamilyEnum"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductPrice"
            },
            "nullable": true
          },
          "discountRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductDiscountRule"
            },
            "nullable": true
          },
          "discountCommission": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "GetAllReasonCancelResponse": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userCreated": {
            "type": "string",
            "nullable": true
          },
          "userUpdated": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PutReasonCancelRequest": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userCreated": {
            "type": "string",
            "nullable": true
          },
          "userUpdated": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetAllPagedReasonCancelResponse": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "rowCount": {
            "type": "integer",
            "format": "int32"
          },
          "firstRowOnPage": {
            "type": "integer",
            "format": "int32"
          },
          "lastRowOnPage": {
            "type": "integer",
            "format": "int32"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetAllReasonCancelResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PostReasonCancelRequest": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userCreated": {
            "type": "string",
            "nullable": true
          },
          "userUpdated": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PostReasonCancelResponse": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userCreated": {
            "type": "string",
            "nullable": true
          },
          "userUpdated": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetAllTemplateResponse": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userCreated": {
            "type": "string",
            "nullable": true
          },
          "userUpdated": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "businessId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PutTemplateRequest": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userCreated": {
            "type": "string",
            "nullable": true
          },
          "userUpdated": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "businessId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetAllPagedTemplateResponse": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "rowCount": {
            "type": "integer",
            "format": "int32"
          },
          "firstRowOnPage": {
            "type": "integer",
            "format": "int32"
          },
          "lastRowOnPage": {
            "type": "integer",
            "format": "int32"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetAllTemplateResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PostTemplateRequest": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userCreated": {
            "type": "string",
            "nullable": true
          },
          "userUpdated": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "businessId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PostTemplateResponse": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userCreated": {
            "type": "string",
            "nullable": true
          },
          "userUpdated": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "businessId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetAllUserResponse": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userCreated": {
            "type": "string",
            "nullable": true
          },
          "userUpdated": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "documentId": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "isAdmin": {
            "type": "boolean"
          },
          "isSuperAdmin": {
            "type": "boolean"
          },
          "isSalesman": {
            "type": "boolean"
          },
          "isIntegration": {
            "type": "boolean"
          },
          "isRegionManager": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PutUserRequest": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userCreated": {
            "type": "string",
            "nullable": true
          },
          "userUpdated": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "documentId": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "isAdmin": {
            "type": "boolean"
          },
          "isSuperAdmin": {
            "type": "boolean"
          },
          "isSalesman": {
            "type": "boolean"
          },
          "isIntegration": {
            "type": "boolean"
          },
          "isRegionManager": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GetAllPagedUserResponse": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "rowCount": {
            "type": "integer",
            "format": "int32"
          },
          "firstRowOnPage": {
            "type": "integer",
            "format": "int32"
          },
          "lastRowOnPage": {
            "type": "integer",
            "format": "int32"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetAllUserResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PostUserRequest": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userCreated": {
            "type": "string",
            "nullable": true
          },
          "userUpdated": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "documentId": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "isAdmin": {
            "type": "boolean"
          },
          "isSuperAdmin": {
            "type": "boolean"
          },
          "isSalesman": {
            "type": "boolean"
          },
          "isIntegration": {
            "type": "boolean"
          },
          "isRegionManager": {
            "type": "boolean"
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PostUserResponse": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userCreated": {
            "type": "string",
            "nullable": true
          },
          "userUpdated": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "documentId": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "isAdmin": {
            "type": "boolean"
          },
          "isSuperAdmin": {
            "type": "boolean"
          },
          "isSalesman": {
            "type": "boolean"
          },
          "isIntegration": {
            "type": "boolean"
          },
          "isRegionManager": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PostUserSinginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetAllVehicleResponse": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userCreated": {
            "type": "string",
            "nullable": true
          },
          "userUpdated": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "capacity": {
            "type": "integer",
            "format": "int32"
          },
          "minCapacity": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PutVehicleRequest": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userCreated": {
            "type": "string",
            "nullable": true
          },
          "userUpdated": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "capacity": {
            "type": "integer",
            "format": "int32"
          },
          "minCapacity": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetAllPagedVehicleResponse": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "rowCount": {
            "type": "integer",
            "format": "int32"
          },
          "firstRowOnPage": {
            "type": "integer",
            "format": "int32"
          },
          "lastRowOnPage": {
            "type": "integer",
            "format": "int32"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetAllVehicleResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PostVehicleRequest": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userCreated": {
            "type": "string",
            "nullable": true
          },
          "userUpdated": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "capacity": {
            "type": "integer",
            "format": "int32"
          },
          "minCapacity": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PostVehicleResponse": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userCreated": {
            "type": "string",
            "nullable": true
          },
          "userUpdated": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "capacity": {
            "type": "integer",
            "format": "int32"
          },
          "minCapacity": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. \r\n\r\n Enter 'Bearer' [space] and then your token in the text input below.\r\n\r\nExample: \"Bearer 12345abcdef\"",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}
